# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    App\EventListener\UserRoleListener:
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist, entity: App\Entity\User }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Validator\NoOverlappingReservationValidator:
        tags: [validator.constraint_validator]
    App\State\ReservationProcessor:
        decorates: 'api_platform.doctrine.orm.state.persist_processor'
        arguments:
            - '@App\State\ReservationProcessor.inner'
            - '@security.helper'
        autowire: true
        autoconfigure: false
        tags:
            - { name: 'api_platform.state_processor' }
    App\Doctrine\CurrentUserReservationExtension:
        arguments:
            $security: '@security.helper'
        tags:
            - { name: 'api_platform.doctrine.orm.query_extension.collection' }
            - { name: 'api_platform.doctrine.orm.query_extension.item' }
    App\Controller\CancelReservationController:
        autowire: true
        autoconfigure: true
        public: true
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
